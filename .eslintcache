[{"/Users/hr/Documents/code/games/obsession/obsession2/src/index.js":"1","/Users/hr/Documents/code/games/obsession/obsession2/src/components/App/App.js":"2","/Users/hr/Documents/code/games/obsession/obsession2/src/components/HomeScreen/HomeScreen.js":"3","/Users/hr/Documents/code/games/obsession/obsession2/src/components/GameBoard/GameBoard.js":"4","/Users/hr/Documents/code/games/obsession/obsession2/src/components/Header/Header.js":"5","/Users/hr/Documents/code/games/obsession/obsession2/src/gameContext.js":"6"},{"size":234,"mtime":1607107185880,"results":"7","hashOfConfig":"8"},{"size":2802,"mtime":1612055112691,"results":"9","hashOfConfig":"8"},{"size":3132,"mtime":1607755479848,"results":"10","hashOfConfig":"8"},{"size":316,"mtime":1607487674065,"results":"11","hashOfConfig":"8"},{"size":451,"mtime":1607487338751,"results":"12","hashOfConfig":"8"},{"size":228,"mtime":1607486604748,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"116ge58",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/hr/Documents/code/games/obsession/obsession2/src/index.js",[],["29","30"],"/Users/hr/Documents/code/games/obsession/obsession2/src/components/App/App.js",["31","32"],"/Users/hr/Documents/code/games/obsession/obsession2/src/components/HomeScreen/HomeScreen.js",["33"],"import React, {useState} from 'react';\n\n\nconst URL = 'ws://localhost:5005/game-websocket'\n\n\nfunction Game() {\n    const [createRoomInput, setCreateRoomInput] = useState(\"\");\n    const [joinRoomInput, setJoinRoomInput] = useState(\"\");\n    const [usernameInput, setUsernameInput] = useState(\"\");\n\n    const ws = new WebSocket(URL)\n\n    const createRoom = (infoObject) => {\n        \n        console.log('in createRoom- use function state to send object');\n        console.log('info object is: ', infoObject);\n        \n        try {\n            ws.send(JSON.stringify(infoObject))\n        } catch (error) {\n            console.log('error!', error);\n        }\n\n        //then should it joinRoom from here or should that be handled in server? prolly server?\n    }\n\n    const joinRoom = (input) => {\n        console.log('in joinRoom with input: ', input);\n        try {\n            ws.send(JSON.stringify({\n                roomName: input,\n                userName: usernameInput,\n                action: \"JOIN\"\n            }))\n        } catch (error) {\n            console.log('error!', error);\n        }\n    }\n\n    const makeUser =(event, input)=>{\n        console.log('in makeUser with input: ', input);\n        try {\n            ws.send(JSON.stringify({\n                userName: input,\n                action: \"NEWUSER\"\n            }))\n        } catch (error) {\n            console.log('error!', error);\n        }\n    }\n\n    return (\n        <div className=\"HomeScreen\">\n            <h2>Home Screen Component</h2>\n                <div>\n                    {2===2 //if there is not a user set (===''), then let them enter a username.\n                        ?\n                        <>\n                            <input type=\"text\" placeholder=\"enter username\" value={usernameInput} onChange={(event) => setUsernameInput(event.target.value)} />\n                            <button onClick={()=>makeUser(usernameInput)}>set username</button>\n                        </>\n                        :\n                        <>\n                            <p>Hi, (Username)</p>\n                            <div>\n                                <input type=\"text\" placeholder=\"name your room\" value={createRoomInput} onChange={(event) => setCreateRoomInput(event.target.value)} />\n                                <button onClick={() => createRoom(createRoomInput)}>create room</button>\n                            </div>\n                            <div>\n                                <input type=\"text\" placeholder=\"enter existing room name\" value={joinRoomInput} onChange={(event) => setJoinRoomInput(event.target.value)} />\n                                <button onClick={() => joinRoom(joinRoomInput)}>join room</button>\n                            </div>\n                        </>\n                    }\n                    \n                    {/* <h2>All Rooms:</h2>\n                    <p>maybe do a useEffect to get all the rooms from the server?</p>\n                    <p>could map the results with 'join' buttons</p> */}\n                </div>\n        </div>\n    );\n}\n\nexport default Game;","/Users/hr/Documents/code/games/obsession/obsession2/src/components/GameBoard/GameBoard.js",[],["34","35"],"/Users/hr/Documents/code/games/obsession/obsession2/src/components/Header/Header.js",[],"/Users/hr/Documents/code/games/obsession/obsession2/src/gameContext.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":16,"column":10,"nodeType":"42","messageId":"43","endLine":16,"endColumn":21},{"ruleId":"40","severity":1,"message":"44","line":16,"column":23,"nodeType":"42","messageId":"43","endLine":16,"endColumn":37},{"ruleId":"45","severity":1,"message":"46","line":57,"column":22,"nodeType":"47","messageId":"48","endLine":57,"endColumn":27},{"ruleId":"36","replacedBy":"49"},{"ruleId":"38","replacedBy":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'currentRoom' is assigned a value but never used.","Identifier","unusedVar","'setCurrentRoom' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf",["51"],["52"],"no-global-assign","no-unsafe-negation"]